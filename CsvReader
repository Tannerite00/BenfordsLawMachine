# This is the benford's law machine. takes a csv file and counts how many instances of each number 1 - 9. 
# In sets that obey the law, the number 1 appears as the leading significant digit about 30% of the time, while 9 appears as the leading significant digit less than 5% of the time.

import tkinter as tk
from tkinter import filedialog
import csv
import matplotlib.pyplot as plt

# Initialize a dictionary to count digits from 1 to 9
digit_counts = {str(i): 0 for i in range(1, 10)}

# Initialize a variable to count the total number of digits
total_digit_count = 0


# Function to handle the file selection
def browse_file():
    file_path = filedialog.askopenfilename(filetypes=[("CSV Files", "*.csv")])
    if file_path:
        entry_file_path.delete(0, tk.END)  # Clear the entry field
        entry_file_path.insert(0, file_path)  # Set the selected file path

# Function to process the selected CSV file
def process_csv():
    global total_digit_count  # Declare total_digit_count as a global variable
    global digit_counts  # Declare digit_counts as a global variable

    csv_file_path = entry_file_path.get()
    if csv_file_path:
        # Clear the previous counts
        digit_counts = {str(i): 0 for i in range(1, 10)}
        total_digit_count = 0

        # Open the CSV file and read its contents
        with open(csv_file_path, newline='') as csvfile:
            csvreader = csv.reader(csvfile)
            for row in csvreader:
                # Join the elements in each row to form a single string
                row_str = ''.join(row)
                
                # Iterate through characters in the row
                for char in row_str:
                    if char.isdigit() and '1' <= char <= '9':
                        # Increment the count for the digit
                        digit_counts[char] += 1
                        total_digit_count += 1

        # Plot the bar chart
        digits = list(digit_counts.keys())
        counts = list(digit_counts.values())
        plt.bar(digits, counts)
        plt.xlabel('Digit')
        plt.ylabel('Count')
        plt.title('Digit Counts')
        plt.show()

# Create the main application window
root = tk.Tk()
root.title("CSV File Processor")

# Create and configure widgets
label_instruction = tk.Label(root, text="Select a CSV file:")
entry_file_path = tk.Entry(root, width=40)
button_browse = tk.Button(root, text="Browse", command=browse_file)
button_process = tk.Button(root, text="Process CSV", command=process_csv)

# Arrange widgets in the layout
label_instruction.pack()
entry_file_path.pack()
button_browse.pack()
button_process.pack()

# Start the Tkinter main loop
root.mainloop()

# This is the benford's law machine. takes a csv file and counts how many instances of each number 1 - 9. 
# In sets that obey the law, the number 1 appears as the leading significant digit about 30% of the time, while 9 appears as the leading significant digit less than 5% of the time.

import csv
import string

# Define the path to your CSV file
csv_file_path = 'C:/Users/tanner.dodd/documents/SampleData.csv'  # Replace with the actual path to your CSV file


# Initialize a dictionary to count digits from 1 to 9
digit_counts = {str(i): 0 for i in range(1, 10)}

# Initialize a variable to count the total number of digits
total_digit_count = 0

# Open the CSV file and read its contents
with open(csv_file_path, newline='') as csvfile:
    csvreader = csv.reader(csvfile)
    for row in csvreader:
        # Join the elements in each row to form a single string
        row_str = ''.join(row)
        
        # Iterate through characters in the row
        for char in row_str:
            if char.isdigit() and '1' <= char <= '9':
                # Increment the count for the digit
                digit_counts[char] += 1
                total_digit_count += 1

# Print the percentage of the total for each digit from 1 to 9
for digit, count in digit_counts.items():
    percentage = (count / total_digit_count) * 100 if total_digit_count > 0 else 0
    print(f'Digit {digit}: {count} instances ({percentage:.2f}%)')
